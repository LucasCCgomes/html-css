Hi there! I've shown you previously
how to build this HTML page.
That page like this one is not very inspiring,
so what I'd like to do now,
is dive deeper and show you how to
create a richer page like this one.
As you can see,
it looks like a little profile page about me,
and it contains richer content.
So let's go back to JSBin,
and create this page from scratch.
So here I am back in JSBin.
I've opened up a new page.
So let's start creating.
The first thing I'll do is change the title of our page,
to something more meaningful.
"Meet Andrew" for example.
If you recall on that page I showed you
we had my name in nice big letters.
We can achieve this using the HTML
heading elements in the body of my page.
The HTML5 defines six heading levels:
'h1' to 'h6', with 'h1' being
the most important heading and it is
rendered in a larger font than all others.
So I'll add my name using a h1 header.
Here I type in this tag 'h1',
and I have to close my tag,
and in between, I'll just go ahead and write my name.
And as you can see on the right-hand side,
my name displays in nice big letters.
Before moving on, let's try
to put the original page that I showed you,
my little profile page,
side by side with this JSBin page,
so we can see
exactly what I'm talking about as we move along.
So to do that I'll just take this page, and move it over,
and just align it up to the side of my window,
and let me see I can make this one a lot smaller.
Now the next thing to work
on is adding an image to our page.
We do this using the 'img' or image tag.
I'll just add one here.
As you can see, this is
a self closing tag meaning you don't have an end tag.
Inside the image tag,
we'll use some attributes to set up our image.
And the first one I'm going to use is the 'alt' attribute.
Now the alt attribute specifies
alternate text for the image which is
very important in two scenarios.
If for some reason the image you define can't be loaded,
the page will at least show this text.
It's also used by screen reading software to
help describe to those that are visually impaired,
what has been shown in the image.
So make sure the text is descriptive.
In this case I'll just write "A picture of Andrew Byrne".
The next attribute to use is the 'src' or source attribute.
And this attribute tells
the HTML page the location of the image,
by specifying a URL.
So I'll just paste my location of my image into
this source attribute and there you go.
So you see the image has appeared but it is very big.
So let's restrict the dimensions of
the image using another attribute.
This time we'll use the width attribute.
Here, I'll just specify a with the image, and as you
can see that has restricted the width and
therefore because of the aspect ratio,
also the height of the image to this particular size.
And there you have it, a picture displaying on our page.
Okay, it's time to add some text to the page.
Let me introduce the paragraph
and break tags for that purpose.
So as its name suggests, the paragraph tag 'p',
delimits a paragraph on your page.
Let's add a paragraph tag and type some text inside.
So here I have a paragraph 'p' tag,
and I'm just inside it.
Just copy and paste, for the sake of time,
some text. As you can see
the text wraps on the page,
but if I want to add an actual new line,
you think I might need to just
simply hit enter and start typing.
So let's try to add more texts.
If I go into my HTML and I hit at the end of this line,
if I hit "ENTER" or "RETURN" and start typing,
what you can see is
that the new line wasn't recognized and
the output is still in
the same line as the previous text.
It's just wrapped on this page because of the size of
this window but still on the same line as you can see.
So the solution to this problem is to use
another paragraph element nested inside this one,
or more simply, I can use
the break 'br' self closing tag as follows.
So just before this particular sentence,
if I just put in the break tag,
it will move that to a new line, and I
can have as many of those as I like
inside my paragraphs and inside my text.
So there's some text i have added to my profile page.
We're making really good progress now.
So let's look at this subheading.
If you recall, I mentioned that
HTML5 defines a number of default heading levels.
So this time, we're going to go ahead and
we'll use a 'h2' header as follows.
So just here, I'll say h2,
and inside it, I'll add my text.
Great.
Let's list my hobbies
using an unordered list.
I'll just go outside of this heading tag,
and here I'll use the ul element.
Using the 'ul' tag.
So that's an unordered list and
it should contain a list of
items represented by the 'li' tag.
So first line, i will add is
swimming, and then i will add another one, learning,
and last but not least in this list,
i will add spending time with family and friends.
And that's my list.
And as you can see, it's
a bulleted list of items at the moment.
If I want to make it an ordered list,
I just change this 'ul' tag to 'ol'.
And as you can see over in
the output, it's actually changed to an ordered list.
Of course now that this is an ordered list,
I think I'll go ahead and change my priorities.
So there you go. Now we have the page
and it's got this list of my hobbies
ordered exactly as I
have them over here in the original page.
Our page is looking really good now.
So the last thing to do is to add
that link at the end to my Twitter page.
Now you see lots of links like this in HTML pages,
and when you click on one such as this one,
the browser takes you to that link's destination.
In this case, it's my Twitter page.
Okay, so let's go back to the HTML editing.
Links, also called hyperlinks,
are added to a page using the 'a' tag.
I'll start a new paragraph first and add some text,
and here I'll say something like:
"Come say hello on Twitter at".
Okay, so in line with this text, I'm going to
add the 'a' tag as follows.
To tell the browser where to navigate to once the link is
clicked, I'll define the 'href' attribute:
'href='. And I'll just add in the URL or
the destination address of
the page to which I want to navigate.
In this case, my Twitter account.
So that's the 'href', and then what I need to do,
is to add some link text and I do that
by adding my Twitter handle in this case
between the opening and closing tags for the hyperlink.
And there you go.
You can see that the link has been created on
the page. So that's it.
We have a page replicated, it
looks exactly like the one that
I showed you at the start.
We've introduced a lot of
different HTML elements and tags.
So why don't you try this out yourselves!